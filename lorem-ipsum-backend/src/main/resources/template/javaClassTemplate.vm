## @formatter:off
package ${packageName};

#foreach( $import in $importSet )
import ${import};
#end

public class ${className} {

#foreach($attribute in $attributeList)
    private ${attribute.getType()} ${attribute.getName()};
#end

    public ${className}(#foreach($attribute in $attributeList)${attribute.getType()} ${attribute.getName()}#if($foreach.hasNext), #end#end) {
#foreach($attribute in $attributeList)
        this.${attribute.getName()} = ${attribute.getName()};
#end
    }

    /**
     * Getter and Setter for Attributes
     */

#foreach($attribute in $attributeList)
    public $attribute.getType() get${attribute.getInfixName()}() {
        return ${attribute.getName()};
    }

    public ${className} set${attribute.getInfixName()}(${attribute.getType()} ${attribute.getName()}) {
        this.${attribute.getName()} = ${attribute.getName()};
        return this;
    }

#end
    public List<${className}> getExampleList() {
        return Arrays.asList(#foreach($entry in $constructorInputList)

            new ${className}(${entry})#if( $foreach.hasNext ), #else);
#end
#end
    }

}
## @formatter:on